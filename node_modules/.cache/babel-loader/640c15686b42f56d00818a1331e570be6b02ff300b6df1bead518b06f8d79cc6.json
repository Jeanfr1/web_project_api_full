{"ast":null,"code":"const BASE_URL=\"http://localhost:3001\";export const register=async(email,password)=>{try{const response=await fetch(`${BASE_URL}/signup`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Falha no registro\");}const data=await response.json();return data;}catch(error){console.error(\"Registration error:\",error);throw error;}};export const authorize=async(email,password)=>{try{const response=await fetch(`${BASE_URL}/signin`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Falha na autorização\");}const{token}=await response.json();localStorage.setItem(\"jwt\",token);return token;}catch(error){console.error(\"Authorization error:\",error);throw error;}};export const checkToken=async token=>{try{const response=await fetch(`${BASE_URL}/users/me`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Falha na verificação do token\");}const data=await response.json();return data;}catch(error){console.error(\"Token verification error:\",error);throw error;}};","map":{"version":3,"names":["BASE_URL","register","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","error","console","authorize","token","localStorage","setItem","checkToken","Authorization"],"sources":["/Users/marielaidin/Desktop/web_project_api_full/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"http://localhost:3001\";\n\nexport const register = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Falha no registro\");\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};\n\nexport const authorize = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Falha na autorização\");\n    }\n\n    const { token } = await response.json();\n    localStorage.setItem(\"jwt\", token);\n    return token;\n  } catch (error) {\n    console.error(\"Authorization error:\", error);\n    throw error;\n  }\n};\n\nexport const checkToken = async (token) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Falha na verificação do token\");\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Token verification error:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAExC,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,SAAS,CAAE,CACjDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,mBAAmB,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAG,IAAI,CACb,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAG,KAAAA,CAAOjB,KAAK,CAAEC,QAAQ,GAAK,CAClD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,SAAS,CAAE,CACjDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,sBAAsB,CAAC,CAC9D,CAEA,KAAM,CAAEK,KAAM,CAAC,CAAG,KAAM,CAAAhB,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvCQ,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEF,KAAK,CAAC,CAClC,MAAO,CAAAA,KAAK,CACd,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,UAAU,CAAG,KAAO,CAAAH,KAAK,EAAK,CACzC,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,WAAW,CAAE,CACnDM,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCiB,aAAa,CAAE,UAAUJ,KAAK,EAChC,CACF,CAAC,CAAC,CAEF,GAAI,CAAChB,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,+BAA+B,CAAC,CACvE,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAG,IAAI,CACb,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}